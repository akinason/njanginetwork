# Generated by Django 2.0 on 2017-12-07 15:37

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='*', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(help_text='*', max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(help_text='*', max_length=50, verbose_name='last name')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], help_text='*', max_length=6, verbose_name='gender')),
                ('tel1', models.CharField(help_text='*', max_length=9, verbose_name='MTN number')),
                ('upline', models.PositiveIntegerField(verbose_name='upline')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_admin', models.BooleanField(default=False)),
                ('country', django_countries.fields.CountryField(default='CM', max_length=2, verbose_name='country')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tel2', models.CharField(blank=True, max_length=9, verbose_name='Orange Number')),
                ('tel3', models.CharField(blank=True, max_length=9, verbose_name='Express Union Number')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='media/main/profile/%Y/%m/%d/', verbose_name='profile picture')),
                ('sponsor_id', models.PositiveIntegerField(blank=True, max_length=6, null=True, unique=True)),
                ('tel1_verification_uuid', models.IntegerField(blank=True, max_length=6, null=True, unique=True)),
                ('tel2_verification_uuid', models.IntegerField(blank=True, max_length=6, null=True, unique=True)),
                ('tel3_verification_uuid', models.IntegerField(blank=True, max_length=6, null=True, unique=True)),
                ('email_verification_uuid', models.UUIDField(default=uuid.uuid4, verbose_name='Unique Verification UUID')),
                ('tel1_is_verified', models.BooleanField(default=False)),
                ('tel2_is_verified', models.BooleanField(default=False)),
                ('tel3_is_verified', models.BooleanField(default=False)),
                ('email_is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'abstract': False,
                'verbose_name_plural': 'users',
            },
            managers=[
                ('object', django.contrib.auth.models.UserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
